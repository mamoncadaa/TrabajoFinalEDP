# -*- coding: utf-8 -*-
"""Punto1FE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HHhT9dFWrp52ucCrBubdN1lJ3dgjZSf6
"""

pip install tabulate



from tabulate import tabulate
from math import *
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
import numpy as np

##Funciones PVI
def func1(t,y1,y2):
  return (9*y1)+(24*y2)+(5*cos(t))-((1/3)*sin(t))
def func2(t,y1,y2):
  return -(24*y1)-(51*y2)-(9*cos(t))+((1/3)*sin(t))
  
##Soluci√≥n PVI
def funcSol1(t):
  return (2*e**(-3*t))-(e**(-39*t))+(1/3*cos(t))
def funcSol2(t):
  return (-e**(-3*t))+(2*e**(-39*t))-(1/3*cos(t))

def FrEuler(func1,func2,funcSol1,funcSol2,a,b,n,y1,y2):
  h = abs(b-a)/n
  x = np.zeros(n+1)
  re1 = np.zeros(n+1)
  re2 = np.zeros(n+1)
  Ey1 = np.zeros(n+1)
  Ey2 = np.zeros(n+1) 
  x[0] = 0
  re1[0] = y1
  re2[0] = y2
  Ey1[0] = 0
  Ey2[0] = 0
  for i in range(1,n+1):
    x[i] = h+x[i-1]
    re1[i] = h*(func1(x[i-1], re1[i-1], re2[i-1])) + re1[i-1]
    re2[i] = h*(func2(x[i-1], re1[i-1], re2[i-1])) + re2[i-1]
    Ey1[i] = abs(re1[i] -funcSol1(x[i]))
    Ey2[i] = abs(re2[i] -funcSol2(x[i]))
     
  print(tabulate({'x': x, 'y1': re1,'Error y1':Ey1,'y2': re2,'Error y2':Ey2 }, headers="keys", tablefmt='fancy_grid'))
  

 
  return x,re1,re2

FrEuler(func1,func2,funcSol1,funcSol2,0,1,8,(4/3),(2/3))

# 100 linearly spaced numbers
x = np.linspace(0,1,1000)
real1 = np.zeros(len(x))
real2 = np.zeros(len(x))
for i in range(len(x)):
  real1[i] = funcSol1(x[i])
  real2[i] = funcSol2(x[i])

x1,y11,y21=FrEuler(func1,func2,funcSol1,funcSol2,0,1,2,(4/3),(2/3))
x2,y12,y22=FrEuler(func1,func2,funcSol1,funcSol2,0,1,4,(4/3),(2/3))
x3,y13,y23=FrEuler(func1,func2,funcSol1,funcSol2,0,1,8,(4/3),(2/3))
x4,y14,y24=FrEuler(func1,func2,funcSol1,funcSol2,0,1,16,(4/3),(2/3))
x5,y15,y25=FrEuler(func1,func2,funcSol1,funcSol2,0,1,32,(4/3),(2/3))
x6,y16,y26=FrEuler(func1,func2,funcSol1,funcSol2,0,1,64,(4/3),(2/3))

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)
plt.plot(x,real2, 'b', label='Exacta')
plt.plot(x1,y21, 'g', label='h=1/2')
plt.plot(x2,y22, 'r', label='h=1/4')
plt.plot(x3,y23, 'c', label='h=1/8')
plt.plot(x4,y24, 'm', label='h=1/16')
plt.plot(x5,y25, 'y', label='h=1/32')
plt.plot(x6,y26, 'k', label='h=1/64')
plt.ylim(top = 1, bottom = -2)
plt.legend(loc='upper rigth')
# show the plot
plt.show()